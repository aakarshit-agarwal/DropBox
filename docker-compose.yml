version: '3'
services:
  authentication_cache:
    container_name: authentication_cache
    image: redis:alpine
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    volumes: 
      - /cache:/home/cache
  authentication_management_service:
    container_name: authentication_management_service
    build: 
      context: .
      dockerfile: ./authentication_management_service/Dockerfile
    environment:
      - NODE_ENV=production
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181 
    ports:
      - "3005:3005"
    depends_on:
      - authentication_cache
      - kafka
  api_gateway:
    container_name: api_gateway
    build: 
      context: .
      dockerfile: ./api_gateway/Dockerfile
    environment:
      - NODE_ENV=production
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181 
    ports:
      - "3000:3000"  
    depends_on:
      - user_management_service
      - metadata_management_service
      - file_management_service
      - directory_management_service
  user_management_service:
    container_name: user_management_service
    build: 
      context: .
      dockerfile: ./user_management_service/Dockerfile
    environment:
      - NODE_ENV=production
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181 
    ports:
      - "3001:3001"  
    depends_on:
      - mongo
      - kafka
  metadata_management_service:
    container_name: metadata_management_service
    build: 
      context: .
      dockerfile: ./metadata_management_service/Dockerfile
    environment:
      - NODE_ENV=production
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181 
    ports:
      - "3002:3002"
    depends_on:
      - mongo
      - kafka
  directory_management_service:
    container_name: directory_management_service
    build: 
      context: .
      dockerfile: ./directory_management_service/Dockerfile
    environment:
      - NODE_ENV=production
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181 
    ports:
      - "3004:3004"
    depends_on:
      - mongo
      - metadata_management_service
      - kafka
  file_management_service:
    container_name: file_management_service
    build: 
      context: .
      dockerfile: ./file_management_service/Dockerfile
    environment:
      - NODE_ENV=production
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181 
    ports:
      - "3003:3003"
    depends_on:
      - mongo
      - directory_management_service
      - kafka
  mongo:
    container_name: mongo
    image: mongo
    ports:
      - "27016:27017"
  zookeeper:
    container_name: zookeeper
    image: wurstmeister/zookeeper
    ports:
      - 2181:2181
  kafka:
    container_name: kafka
    image: wurstmeister/kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka  
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_CREATE_TOPICS: "CREATE_USER:1:1,UPDATE_USER:1:1,DELETE_USER:1:1,CREATE_METADATA:1:1,UPDATE_METADATA:1:1,DELETE_METADATA:1:1,CREATE_DIRECTORY:1:1,UPDATE_DIRECTORY:1:1,DELETE_DIRECTORY:1:1,ADDED_FILES:1:1,DELETED_FILES:1:1"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    ports:
      - 9092:9092
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock